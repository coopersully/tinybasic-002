
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS LET LPAREN MINUS NAME NUMBER PLUS RPAREN SEMICOLON TIMES\n    program : assignment_list expression\n    \n    program : expression\n    \n    assignment_list : assignment SEMICOLON\n    \n    assignment_list : assignment SEMICOLON assignment_list\n    \n    assignment : LET NAME EQUALS expression\n    \n    expression : term PLUS term\n               | term MINUS term\n    \n    expression : term\n    \n    term : factor TIMES factor\n         | factor DIVIDE factor\n    \n    term : factor\n    \n    factor : NAME\n    \n    factor : NUMBER\n    \n    factor : PLUS factor\n           | MINUS factor\n    \n    factor : LPAREN expression RPAREN\n    '
    
_lr_action_items = {'LET':([0,14,],[8,8,]),'NAME':([0,2,6,7,8,12,14,15,16,20,21,23,26,],[9,9,9,9,19,9,-3,9,9,9,9,-4,9,]),'NUMBER':([0,2,6,7,12,14,15,16,20,21,23,26,],[11,11,11,11,11,-3,11,11,11,11,-4,11,]),'PLUS':([0,2,5,6,7,9,10,11,12,14,15,16,17,18,20,21,23,26,27,28,29,],[6,6,15,6,6,-12,-11,-13,6,-3,6,6,-14,-15,6,6,-4,6,-9,-10,-16,]),'MINUS':([0,2,5,6,7,9,10,11,12,14,15,16,17,18,20,21,23,26,27,28,29,],[7,7,16,7,7,-12,-11,-13,7,-3,7,7,-14,-15,7,7,-4,7,-9,-10,-16,]),'LPAREN':([0,2,6,7,12,14,15,16,20,21,23,26,],[12,12,12,12,12,-3,12,12,12,12,-4,12,]),'$end':([1,3,5,9,10,11,13,17,18,24,25,27,28,29,],[0,-2,-8,-12,-11,-13,-1,-14,-15,-6,-7,-9,-10,-16,]),'SEMICOLON':([4,5,9,10,11,17,18,24,25,27,28,29,30,],[14,-8,-12,-11,-13,-14,-15,-6,-7,-9,-10,-16,-5,]),'RPAREN':([5,9,10,11,17,18,22,24,25,27,28,29,],[-8,-12,-11,-13,-14,-15,29,-6,-7,-9,-10,-16,]),'TIMES':([9,10,11,17,18,29,],[-12,20,-13,-14,-15,-16,]),'DIVIDE':([9,10,11,17,18,29,],[-12,21,-13,-14,-15,-16,]),'EQUALS':([19,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'assignment_list':([0,14,],[2,23,]),'expression':([0,2,12,26,],[3,13,22,30,]),'assignment':([0,14,],[4,4,]),'term':([0,2,12,15,16,26,],[5,5,5,24,25,5,]),'factor':([0,2,6,7,12,15,16,20,21,26,],[10,10,17,18,10,10,10,27,28,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> assignment_list expression','program',2,'p_program_withassignments','main.py',96),
  ('program -> expression','program',1,'p_program_noassignments','main.py',103),
  ('assignment_list -> assignment SEMICOLON','assignment_list',2,'p_assignment_listsingle','main.py',110),
  ('assignment_list -> assignment SEMICOLON assignment_list','assignment_list',3,'p_assignment_listmultiple','main.py',117),
  ('assignment -> LET NAME EQUALS expression','assignment',4,'p_assignment','main.py',124),
  ('expression -> term PLUS term','expression',3,'p_expression','main.py',132),
  ('expression -> term MINUS term','expression',3,'p_expression','main.py',133),
  ('expression -> term','expression',1,'p_expression_term','main.py',145),
  ('term -> factor TIMES factor','term',3,'p_term','main.py',152),
  ('term -> factor DIVIDE factor','term',3,'p_term','main.py',153),
  ('term -> factor','term',1,'p_term_factor','main.py',160),
  ('factor -> NAME','factor',1,'p_factor_name','main.py',167),
  ('factor -> NUMBER','factor',1,'p_factor_number','main.py',174),
  ('factor -> PLUS factor','factor',2,'p_factor_unary','main.py',181),
  ('factor -> MINUS factor','factor',2,'p_factor_unary','main.py',182),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_grouped','main.py',189),
]
